/*
 * QEMU model of the EFUSE eFuse
 *
 * Copyright (c) 2015 Xilinx Inc.
 *
 * Written by Edgar E. Iglesias <edgari@xilinx.com>
 * Partially autogenerated by xregqemu.py 2015-01-02.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

#ifndef XLNX_EFUSE__H
#define XLNX_EFUSE__H

#define TYPE_XLNX_EFUSE "xlnx.efuse"
#include "hw/ptimer.h"
#include "sysemu/block-backend.h"

#define XLNX_EFUSE(obj) \
     OBJECT_CHECK(XLNXEFuse, (obj), TYPE_XLNX_EFUSE)

#define TBIT0_OFFSET     28
#define TBIT1_OFFSET     29
#define TBIT2_OFFSET     30
#define TBIT3_OFFSET     31

#define FBIT_UNKNOWN (~0)

typedef struct XLNXEFuse {
    DeviceState parent_obj;
    BlockBackend *blk;
    uint32_t *fuse32;

    QEMUBH *bh_ps;
    QEMUBH *bh_pgm;
    ptimer_state *timer_ps;
    ptimer_state *timer_pgm;

    bool programming;
    uint32_t efuse_idx;

    uint8_t efuse_nr;
    uint32_t efuse_size;
} XLNXEFuse;

bool efuse_is_pgm(XLNXEFuse *s);
void efuse_sync_u32(XLNXEFuse *s, uint32_t *u32,
                           unsigned int f_start, unsigned int f_end,
                           unsigned int f_written);
void efuse_pgm_start(XLNXEFuse *s, int tpgm, uint64_t val);
void efuse_stop_timer_ps(XLNXEFuse *s);
void efuse_set_timer_ps(XLNXEFuse *s, int tsu_h_ps);
void efuse_pgm_complete(XLNXEFuse *s);
bool efuse_get_bit(XLNXEFuse *s, unsigned int bit);
unsigned int efuse_tbits_read(XLNXEFuse *s, int n);
#endif
